name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download dependencies
        run: |
          chmod +x ./update-deps.sh
          ./update-deps.sh

      - name: Compute Synchronet source hash
        id: sbbs-hash
        run: |
          HASH=$(cat deps/sbbs_src.tgz deps/sbbs_run.tgz | sha256sum | cut -d' ' -f1 | cut -c1-12)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          echo "Synchronet source hash: $HASH"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check if image already exists
        id: check-image
        run: |
          if docker manifest inspect lmorchard/synchronet:sbbs-${{ steps.sbbs-hash.outputs.hash }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Image already exists with this Synchronet version"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Need to build new image"
          fi

      - name: Extract metadata (tags, labels)
        id: meta
        if: steps.check-image.outputs.exists == 'false'
        uses: docker/metadata-action@v5
        with:
          images: lmorchard/synchronet
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=sbbs-${{ steps.sbbs-hash.outputs.hash }}

      - name: Build and push Docker image
        if: steps.check-image.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Re-tag existing image as latest
        if: steps.check-image.outputs.exists == 'true' && github.ref == 'refs/heads/main'
        run: |
          docker pull lmorchard/synchronet:sbbs-${{ steps.sbbs-hash.outputs.hash }}
          docker tag lmorchard/synchronet:sbbs-${{ steps.sbbs-hash.outputs.hash }} lmorchard/synchronet:latest
          docker push lmorchard/synchronet:latest
